{"version":3,"file":"bf1ae1a699b8fc1542bf.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,MAAMM,YAAY,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,UAAhB;AAA4BC,EAAAA;AAA5B,CAAD,KAAyC;AAC7D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,4DAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMQ,cAAc,GAAIC,SAAD,IAAe;AACrC,WAAOC,MAAM,CAACC,OAAP,CAAeF,SAAf,EAA0BG,GAA1B,CAA8B,CAAC,CAACC,QAAD,EAAWC,OAAX,CAAD,KAAyB;AAC7D,aACC,kEAAC,0DAAD;AAAS,iBAAS,EAAC,SAAnB;AAA6B,YAAI,EAAED,QAAnC;AAA6C,WAAG,EAAEA;AAAlD,SACC,kEAAC,yDAAD;AACC,iBAAS,EAAC,aADX;AAEC,eAAO,EAAE,MAAM;AACdV,UAAAA,YAAY,CAACU,QAAD,CAAZ;AACAT,UAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,UAAAA,cAAc,CAAC,EAAD,CAAd;AACA;AANF,SAQEO,OARF,CADD,CADD;AAcA,KAfM,CAAP;AAgBA,GAjBD;;AAmBA,QAAMC,aAAa,GAAG,MAAM;AAC3B,UAAMN,SAAS,GAAG,EAAlB;;AACA,SAAK,MAAM,CAACI,QAAD,EAAWG,GAAX,CAAX,IAA8BN,MAAM,CAACC,OAAP,CAAeN,KAAf,CAA9B,EAAqD;AACpD,UAAIQ,QAAQ,CAACI,OAAT,CAAiBX,WAAjB,IAAgC,CAAC,CAArC,EAAwC;AACvCG,QAAAA,SAAS,CAACI,QAAD,CAAT,GAAsBG,GAAtB;AACA;AACD;;AACD,WAAOP,SAAP;AACA,GARD;;AAUA,QAAMS,WAAW,GAAGV,cAAc,CAACO,aAAa,EAAd,CAAlC;AAEA,SACC;AAAK,aAAS,EAAC;AAAf,KACC,kEAAC,8DAAD;AACC,eAAW,EAAEhB,mDAAE,CAAC,QAAD,EAAW,QAAX,CADhB;AAEC,SAAK,EAAEO,WAFR;AAGC,QAAI,EAAC,QAHN;AAIC,YAAQ,EAAEC,cAJX;AAKC,aAAS,EAAC;AALX,IADD,EAQC;AAAK,aAAS,EAAC;AAAf,KAAkCW,WAAlC,CARD,CADD;AAYA,CA9CD;;AAgDAhB,YAAY,CAACiB,SAAb,GAAyB;AACxBhB,EAAAA,YAAY,EAAEF,mEADU;AAExBG,EAAAA,UAAU,EAAEH,mEAFY;AAGxBI,EAAAA,KAAK,EAAEJ,qEAA2BoB;AAHV,CAAzB;AAMA,iEAAenB,YAAf","sources":["webpack://solace/./assets/apps/customizer-controls/src/repeater/IconsContent.js"],"sourcesContent":["import { Button, TextControl, Tooltip } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport PropTypes from 'prop-types';\n\nconst IconsContent = ({ onIconChoice, setVisible, icons }) => {\n\tconst [searchValue, setSearchValue] = useState('');\n\n\tconst transformIcons = (tempIcons) => {\n\t\treturn Object.entries(tempIcons).map(([iconName, iconSVG]) => {\n\t\t\treturn (\n\t\t\t\t<Tooltip className=\"tooltip\" text={iconName} key={iconName}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"icon-button\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tonIconChoice(iconName);\n\t\t\t\t\t\t\tsetVisible(false);\n\t\t\t\t\t\t\tsetSearchValue('');\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{iconSVG}\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t});\n\t};\n\n\tconst filterOptions = () => {\n\t\tconst tempIcons = {};\n\t\tfor (const [iconName, svg] of Object.entries(icons)) {\n\t\t\tif (iconName.indexOf(searchValue) > -1) {\n\t\t\t\ttempIcons[iconName] = svg;\n\t\t\t}\n\t\t}\n\t\treturn tempIcons;\n\t};\n\n\tconst iconsToShow = transformIcons(filterOptions());\n\n\treturn (\n\t\t<div className=\"icons-popover-content\">\n\t\t\t<TextControl\n\t\t\t\tplaceholder={__('Search', 'solace')}\n\t\t\t\tvalue={searchValue}\n\t\t\t\ttype=\"search\"\n\t\t\t\tonChange={setSearchValue}\n\t\t\t\tclassName=\"icons-popover-header\"\n\t\t\t/>\n\t\t\t<div className=\"icons-container\">{iconsToShow}</div>\n\t\t</div>\n\t);\n};\n\nIconsContent.propTypes = {\n\tonIconChoice: PropTypes.func.isRequired,\n\tsetVisible: PropTypes.func.isRequired,\n\ticons: PropTypes.object.isRequired,\n};\n\nexport default IconsContent;\n"],"names":["Button","TextControl","Tooltip","__","useState","PropTypes","IconsContent","onIconChoice","setVisible","icons","searchValue","setSearchValue","transformIcons","tempIcons","Object","entries","map","iconName","iconSVG","filterOptions","svg","indexOf","iconsToShow","propTypes","func","isRequired","object"],"sourceRoot":""}