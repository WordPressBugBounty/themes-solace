{"version":3,"file":"fa22457c6c273583e45e.js","mappings":"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","sources":["webpack://solace/./assets/apps/customizer-controls/src/rich-text/RichText.js"],"sourcesContent":["/* global SolaceReactCustomize, Event */\nimport PropTypes from 'prop-types';\nimport { useCallback, useEffect, useRef } from '@wordpress/element';\nimport DynamicFieldInserter from '../dynamic-fields/dynamic-field-inserter';\n\nconst RichText = ({\n\tonChange,\n\tcurrentValue,\n\tlabel,\n\tid,\n\ttoolbars,\n\tallowedDynamicFields,\n}) => {\n\tconst textArea = useRef(null);\n\tconst useDynamicFields = Boolean(\n\t\tArray.isArray(allowedDynamicFields) && allowedDynamicFields.length\n\t);\n\tconst toolbarOneDefaults =\n\t\t'formatselect,bold,italic,bullist,numlist,link,wp_adv';\n\tconst toolbarTwoDefaults =\n\t\t'strikethrough,hr,forecolor,pastetext,removeformat';\n\tconst { toolbar1 = toolbarOneDefaults, toolbar2 = toolbarTwoDefaults } =\n\t\ttoolbars;\n\tconst editorId = `${id}-editor`;\n\tSolaceReactCustomize.fieldSelection = {};\n\n\t/**\n\t * Get the editor to be used based on the available version that WP loads.\n\t */\n\tconst correctEditor = wp.oldEditor || wp.editor;\n\n\t/**\n\t * A listener to trigger the update state on change.\n\t */\n\tconst listener = useCallback(\n\t\t() => onChange(correctEditor.getContent(editorId)),\n\t\t[editorId]\n\t);\n\n\t/**\n\t * Method to add a change listener for the current editor.\n\t */\n\tconst addEditorChangeListener = () => {\n\t\tif (window.tinymce.editors[editorId]) {\n\t\t\twindow.tinymce.editors[editorId].on('change', listener);\n\t\t}\n\t};\n\n\t/**\n\t * Method to remove a change listener for the current editor.\n\t */\n\tconst removeEditorChangeListener = () => {\n\t\tif (window.tinymce.editors[editorId]) {\n\t\t\twindow.tinymce.editors[editorId].off('change', listener);\n\t\t}\n\t};\n\n\t/**\n\t * Initialise the editor.\n\t */\n\tconst initEditor = () => {\n\t\tcorrectEditor.initialize(editorId, {\n\t\t\tquicktags: true,\n\t\t\tmediaButtons: true,\n\n\t\t\ttinymce: {\n\t\t\t\ttoolbar1,\n\t\t\t\ttoolbar2,\n\t\t\t\tstyle_formats_merge: true,\n\t\t\t\tstyle_formats: [],\n\t\t\t\tverify_html: false,\n\t\t\t},\n\t\t});\n\n\t\tsetTimeout(addEditorChangeListener, 0);\n\n\t\tif (wp.oldEditor) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tremoveEditorChangeListener();\n\n\t\t\t\tcorrectEditor.remove(editorId);\n\n\t\t\t\tcorrectEditor.initialize(editorId, {\n\t\t\t\t\tquicktags: true,\n\t\t\t\t\tmediaButtons: true,\n\n\t\t\t\t\ttinymce: {\n\t\t\t\t\t\ttoolbar1,\n\t\t\t\t\t\ttoolbar2,\n\t\t\t\t\t\tstyle_formats_merge: true,\n\t\t\t\t\t\tstyle_formats: [],\n\t\t\t\t\t\tverify_html: false,\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tsetTimeout(addEditorChangeListener, 0);\n\t\t\t}, 300);\n\t\t}\n\t};\n\n\t/**\n\t * Method to update the editor content and state.\n\t *\n\t * @param {string} content The new content.\n\t */\n\tconst setEditorContent = (content) => {\n\t\tonChange(content);\n\t\twindow.tinymce.editors[editorId].setContent(content);\n\t};\n\n\t/**\n\t * Add dynamic tag to input field.\n\t *\n\t * @param {string} magicTag\n\t * @param {string} optionType\n\t */\n\tconst addToField = function (magicTag, optionType) {\n\t\tlet tag;\n\t\tconst codeEditor = textArea.current;\n\t\tconst isVisualEditor = !window.tinymce.editors[editorId].hidden;\n\n\t\tif (optionType === 'url') {\n\t\t\ttag = `<a href=\"{${magicTag}}\">Link</a>`;\n\t\t} else {\n\t\t\ttag = `{${magicTag}}`;\n\t\t}\n\n\t\tif (isVisualEditor) {\n\t\t\twindow.tinymce.editors[editorId].editorCommands.execCommand(\n\t\t\t\t'mceInsertContent',\n\t\t\t\tfalse,\n\t\t\t\ttag\n\t\t\t);\n\t\t\twindow.tinymce.editors[editorId].focus();\n\t\t} else {\n\t\t\tif (SolaceReactCustomize.fieldSelection[id]) {\n\t\t\t\tconst { start, end } = SolaceReactCustomize.fieldSelection[id];\n\t\t\t\tconst length = codeEditor.value.length;\n\t\t\t\tcodeEditor.value =\n\t\t\t\t\tcodeEditor.value.substring(0, start) +\n\t\t\t\t\ttag +\n\t\t\t\t\tcodeEditor.value.substring(end, length);\n\t\t\t} else {\n\t\t\t\tcodeEditor.value += tag;\n\t\t\t}\n\t\t\tcodeEditor.focus();\n\t\t}\n\t\tcodeEditor.dispatchEvent(new Event('change'));\n\t};\n\n\tconst controlWrapperStyle = {\n\t\tposition: 'relative',\n\t};\n\tconst dynamicFieldStyle = {\n\t\tposition: 'absolute',\n\t\ttop: 0,\n\t\tright: '8px',\n\t};\n\n\tconst textAreaStyle = {\n\t\twidth: '100%',\n\t};\n\n\tuseEffect(() => {\n\t\t// We also hook here to listen for changes of the dynamic settings change to also trigger the editor content update.\n\t\tif (textArea && textArea.current) {\n\t\t\ttextArea.current.addEventListener('change', () => {\n\t\t\t\tsetEditorContent(textArea.current.value);\n\t\t\t});\n\n\t\t\ttextArea.current.addEventListener('focusout', function (e) {\n\t\t\t\tSolaceReactCustomize.fieldSelection[id] = {\n\t\t\t\t\tstart: e.target.selectionStart,\n\t\t\t\t\tend: e.target.selectionEnd,\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tinitEditor();\n\t}, []);\n\n\t// Re-init text editor content on conditional changes.\n\tuseEffect(() => {\n\t\tdocument.addEventListener('solace-changed-customizer-value', (e) => {\n\t\t\tif (!e.detail) return false;\n\t\t\tif (e.detail.id !== id) return false;\n\t\t\tsetEditorContent(e.detail.value);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"solace-white-background-control solace-rich-text\"\n\t\t\tstyle={controlWrapperStyle}\n\t\t>\n\t\t\t<span className=\"customize-control-title\">{label}</span>\n\t\t\t{useDynamicFields && (\n\t\t\t\t<span style={dynamicFieldStyle}>\n\t\t\t\t\t<DynamicFieldInserter\n\t\t\t\t\t\toptions={SolaceReactCustomize?.dynamicTags?.options || []}\n\t\t\t\t\t\tallowedOptionsTypes={allowedDynamicFields}\n\t\t\t\t\t\tonSelect={(magicTag, group) =>\n\t\t\t\t\t\t\taddToField(magicTag, group)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t)}\n\t\t\t<textarea\n\t\t\t\tref={textArea}\n\t\t\t\tid={editorId}\n\t\t\t\tclassName=\"solace-custom-html-control-tinymce-editor mce-tinymce\"\n\t\t\t\tvalue={currentValue}\n\t\t\t\tstyle={textAreaStyle}\n\t\t\t\tonChange={({ target: { value } }) => onChange(value)}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nRichText.propTypes = {\n\tid: PropTypes.string.isRequired,\n\ttoolbars: PropTypes.object,\n\tallowedDynamicFields: PropTypes.array,\n\tlabel: PropTypes.string.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\tcurrentValue: PropTypes.string.isRequired,\n};\n\nexport default RichText;\n"],"names":["PropTypes","useCallback","useEffect","useRef","DynamicFieldInserter","RichText","onChange","currentValue","label","id","toolbars","allowedDynamicFields","textArea","useDynamicFields","Boolean","Array","isArray","length","toolbarOneDefaults","toolbarTwoDefaults","toolbar1","toolbar2","editorId","SolaceReactCustomize","fieldSelection","correctEditor","wp","oldEditor","editor","listener","getContent","addEditorChangeListener","window","tinymce","editors","on","removeEditorChangeListener","off","initEditor","initialize","quicktags","mediaButtons","style_formats_merge","style_formats","verify_html","setTimeout","remove","setEditorContent","content","setContent","addToField","magicTag","optionType","tag","codeEditor","current","isVisualEditor","hidden","editorCommands","execCommand","focus","start","end","value","substring","dispatchEvent","Event","controlWrapperStyle","position","dynamicFieldStyle","top","right","textAreaStyle","width","addEventListener","e","target","selectionStart","selectionEnd","document","detail","dynamicTags","options","group","propTypes","string","isRequired","object","array","func"],"sourceRoot":""}